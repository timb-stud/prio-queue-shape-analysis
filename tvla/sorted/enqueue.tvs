// An acyclic singly-linked list with two or more elements pointed by program x.
%n = {head, tail, queue, data, prio}
%p = {
	   i0 = {data}
	   i1 = {prio}
       sm = {tail:1/2}
       n = {queue -> head, head->tail:1/2, tail->tail:1/2}
	   $this = {queue}
       t[n] = {prio->prio, data->data, queue->queue, queue->head, queue->tail, head->head, head->tail, tail->tail:1/2}
	   r[n,$this] = {queue, head, tail}
	   r[n,i0] = {data}
	   r[n,i1] = {prio}
	   deq = {prio->prio, data->data, queue->queue, head->head, tail->tail:1/2, data->head:1/2, prio->head:1/2, head->data:1/2, head->prio:1/2, data->tail:1/2, prio->tail:1/2, tail->data:1/2, tail->prio:1/2}
	   peq = {prio->prio, data->data, queue->queue, head->head, tail->tail:1/2, data->head:1/2, prio->head:1/2, head->data:1/2, head->prio:1/2, data->tail:1/2, prio->tail:1/2, tail->data:1/2, tail->prio:1/2}
	   dle = {prio->prio, data->data, queue->queue, head->head, tail->tail:1/2, head->tail, head->queue:1/2, head->data:1/2, head->prio:1/2, tail->queue:1/2, tail->data:1/2, tail->prio:1/2, queue->data:1/2, queue->prio:1/2, data->prio:1/2, queue->head:1/2, data->head:1/2, prio->head:1/2, queue->tail:1/2, data->tail:1/2, prio->tail:1/2, data->queue:1/2, prio->queue:1/2, prio->data:1/2}
}

// An empty list (x points to NULL).
%n = {queue, data, prio}
%p = {
	i0 = {data}
	i1 = {prio}
	t[n] = {queue->queue, data->data, prio->prio}
	$this = {queue}
	r[n,$this]= {queue}
	r[n, i0] = {data}
	r[n, i1] = {prio}
	deq = {queue->queue, data->data, prio->prio}
	peq = {queue->queue, data->data, prio->prio}
	dle = {queue->queue, data->data, prio->prio, queue->data:1/2, queue->prio:1/2, data->prio:1/2, data->queue:1/2, prio->queue:1/2, prio->data:1/2}
}
